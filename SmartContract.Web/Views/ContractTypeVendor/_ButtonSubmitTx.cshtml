@model SmartContract.Infrastructure.Resources.ContractTypeVendor.TAllMasterVendorView
@using SmartContract.Utils
@inject SmartContract.Infrastructure.Interfaces.Authenticate.IUserService UserService

@{
    string _Station = (Model.ContractStation != null ? Model.ContractStation.StationStatusCurr : String.Empty);
    String _MenuCode = Model.ParameterCondition.MenuEn != null ? SecurityRepo.Decrypt(Model.ParameterCondition.MenuEn) : String.Empty;
    var indataBinding = Model.InfoRequestBinding;

    var indataSigner = Model.InfoSignerPartnersOfContract;
    int VendorWitnessCount = Model.MasterSendmail.Count(x => x.SendmailType == SendmailTypes.VendorWitness);
    int VendorAuthorityCount = Model.MasterSendmail.Count(x => x.SendmailType == SendmailTypes.VendorAuthority);
    String _ActionTracking = "Tracking";
    if (UserService.GetRegisterType().Contains("G"))
    {
        _ActionTracking = "Tracking2";
    }

}

<div class="col text-center">
    <input type="hidden" asp-for="ObjectState" />
    <input type="hidden" asp-for="ParameterCondition.Menu" />
    <input type="hidden" asp-for="ParameterCondition.MenuEn" />
    <input type="hidden" asp-for="ParameterCondition.IdSmctMaster" />
    <input type="hidden" asp-for="ParameterCondition.SigningTypeEn" />
    <input type="hidden" asp-for="ParameterCondition.ContractTypeId" />
    <input type="hidden" asp-for="ParameterCondition.ContractIdSelectEn" />
    <input type="hidden" asp-for="ParameterCondition.ContractTypeIdEn" />
    <input type="hidden" asp-for="ParameterCondition.IdContractType" />
    <input type="hidden" asp-for="ParameterCondition.Style" />
    <input type="hidden" asp-for="ParameterCondition.Station" />
    <input type="hidden" asp-for="ParameterCondition.ItemStatusCurr" />
    <input type="hidden" asp-for="ParameterCondition.ContractTypeFullName" />
    <input type="hidden" asp-for="ParameterCondition.ContractSuccessType" />
    <input type="hidden" asp-for="ParameterCondition.ContractSuccessTypeEn" />
    <input type="hidden" asp-for="ParameterCondition.RefId" />
    <input type="hidden" id="VendorWitnessStatus" value="@(indataSigner.VendorWitnessStatus)" />
    <input type="hidden" id="VendorWitnessCount" value="@(VendorWitnessCount)" />
    <input type="hidden" id="VendorAuthorityCount" value="@(VendorAuthorityCount)" />
    @if (string.IsNullOrWhiteSpace(_Station) || _Station == ContractStationStatusAll.S1Draft)
    {
        <button type="submit" class="btn btn-warning mr-2" name="BtnSubmit" value="0">บันทึกร่าง</button>
    }
    @*แก้ไขหลังจากผูกพันไปแล้ว*@
    @if (_MenuCode == ContractSuccessTypes.T1_EDIT || _MenuCode == ContractSuccessTypes.T2_CANCEL || _MenuCode == ContractSuccessTypes.T3_EXPAND || _MenuCode == ContractSuccessTypes.T4_CLOSEPROJECT || _MenuCode == ContractSuccessTypes.T5_TERMINATE)
    {
        <a class="btn btn-secondary mr-2" onclick="showLoading()"
           asp-controller="HomeVendor"
           asp-action="TrackingBinding"
           asp-route-MenuEn="@(SecurityRepo.Encrypt(_MenuCode))"
           asp-route-ContractSuccessTypeEn="@(Model.ParameterCondition.ContractSuccessTypeEn)">ยกเลิกทำรายการ</a>

        //กรณีอนุมัติแล้ว หรือ ยกเลิก จะส่งขออนุมัติเข้าไปใหม่ได้ แต่ตีกลับจะทำไม่ได้ เพราะกรณีตีกลับหน่วยบริการอาจจะส่งขอเข้าไปใหม่ได้
        @if (Model.ParameterCondition.ContractSuccessType == ContractSuccessTypes.TA_NORMAL || (indataBinding != null && (indataBinding.ContractSuccessStatus != ContractStatusAll.S1WaitApprove)))
        {
            <button type="submit" class="btn btn-success" name="BtnSubmit" value="@(ContractUtils.BindingPropertite(_MenuCode).ButtonState)">
                @(ContractUtils.BindingPropertite(_MenuCode).ButtonName) <i class="fa fa-angle-right align-middle"></i>
            </button>
        }
        //ยกเลิกดำเนินการ ที่ทำไว้ก่อนหน้า กรณีอยู่สถานะ(รออนุมัติ,ตีกลับแก้ไข)
        if (indataBinding != null &&
            ((Model.ParameterCondition.ContractSuccessType != ContractSuccessTypes.TA_NORMAL && indataBinding.ContractSuccessStatus == ContractStatusAll.S1WaitApprove) || indataBinding.ContractSuccessStatus == ContractStatusAll.S2UnApprove))
        {
            <button type="submit" class="btn btn-danger ml-2" name="BtnSubmit" value="70">
                <i class="fas fa-times-circle align-middle"></i> ยกเลิกดำเนินการ
            </button>
        }
    }
    else
    {
        <a class="btn btn-secondary mr-2" asp-controller="HomeVendor" asp-action="@(_ActionTracking)" asp-route-Style="@(Model.ParameterCondition.Style)"><i class="fa fa-angle-left align-middle"></i> ยกเลิกทำรายการ</a>
    }

    @if (String.IsNullOrEmpty(_Station) || _Station == ContractStationStatusAll.S1Draft)
    {
        <button type="submit" class="btn btn-success" name="BtnSubmit" value="1">บันทึกส่งต่อ <i class="fa fa-angle-right align-middle"></i></button>
        <button type="submit" class="btn btn-danger ml-2" name="BtnSubmit" value="2">ยกเลิกข้อมูล <i class="fa fa-angle-right align-middle"></i></button>
    }
</div>